<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!-- 上拉加载 -->
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    <declare-styleable name="HeartLayout">
        <attr name="initX" format="dimension" />
        <attr name="initY" format="dimension" />
        <attr name="xRand" format="dimension" />
        <attr name="animLengthRand" format="dimension" />
        <attr name="xPointFactor" format="dimension" />
        <attr name="animLength" format="dimension" />
        <attr name="heart_width" format="dimension" />
        <attr name="heart_height" format="dimension" />
        <attr name="bezierFactor" format="integer" />
        <attr name="anim_duration" format="integer" />
    </declare-styleable>
    <declare-styleable name="CircularProgress">
        <attr name="borderWidth" format="dimension" />
    </declare-styleable>

    <declare-styleable name="NumberProgressBar">
        <attr name="progress_current" format="integer" />
        <attr name="progress_max" format="integer" />
        <attr name="progress_unreached_color" format="color" />
        <attr name="progress_reached_color" format="color" />
        <attr name="progress_reached_bar_height" format="dimension" />
        <attr name="progress_unreached_bar_height" format="dimension" />
        <attr name="progress_text_size" format="dimension" />
        <attr name="progress_text_color" format="color" />
        <attr name="progress_text_offset" format="dimension" />
        <attr name="progress_text_visibility" format="enum">
            <enum name="visible" value="0" />
            <enum name="invisible" value="1" />
        </attr>
    </declare-styleable>
    <declare-styleable name="DynamicPagerIndicator">
        <attr name="pagerIndicatorMode">
            <enum name="scrollable" value="1" />
            <enum name="fixed" value="2" />
            <enum name="scrollable_center" value="3" />
        </attr>
        <attr name="pagerIndicatorScrollToCenterMode">
            <enum name="linkage" value="1" />
            <enum name="transaction" value="2" />
        </attr>
        <attr name="tabPadding" format="dimension" />
        <attr name="tabNormalTextSize" format="dimension" />
        <attr name="tabSelectedTextSize" format="dimension" />
        <attr name="tabSelectedTextColor" format="color" />
        <attr name="tabNormalTextColor" format="color" />
        <attr name="tabTextColorMode">
            <enum name="common" value="1" />
            <enum name="gradient" value="2" />
        </attr>
        <attr name="indicatorLineHeight" format="dimension" />
        <attr name="indicatorLineWidth" format="dimension" />
        <attr name="indicatorLineRadius" format="dimension" />
        <attr name="indicatorLineStartColor" format="color" />
        <attr name="indicatorLineEndColor" format="color" />
        <attr name="indicatorLineMarginTop" format="dimension" />
        <attr name="indicatorLineMarginBottom" format="dimension" />
        <attr name="indicatorLineScrollMode">
            <enum name="dynamic" value="1" />
            <enum name="transform" value="2" />
        </attr>
    </declare-styleable>
</resources>